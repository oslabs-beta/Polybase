[2024-11-14T01:45:16.091Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T01:45:16.177Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T01:45:16.177Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T01:45:16.178Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 34,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 2721954,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T01:45:16.178Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T01:45:16.179Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T01:45:16.478Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T01:45:16.480Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T01:45:16.481Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T01:45:16.481Z"
    }
  }
} 

[2024-11-14T01:45:16.482Z] [ERROR] Failed to connect to postgres: undefined {
  "stack": "\"Error: Failed to connect to postgres: undefined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:185:19)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T01:45:16.482Z] [ERROR] Failed to initialize Polybase {
  "error": {
    "success": false,
    "error": {
      "message": "Failed to connect to postgres: undefined",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T01:45:16.482Z"
    }
  }
} 

[2024-11-14T01:45:16.482Z] [ERROR] Failed to initialize Polybase: undefined {
  "stack": "\"Error: Failed to initialize Polybase: undefined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:206:15)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T01:46:53.213Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T01:46:53.254Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T01:46:53.254Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T01:46:53.256Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 2819033,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T01:46:53.256Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T01:46:53.256Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T01:46:53.386Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T01:46:53.387Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T01:46:53.387Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T01:46:53.387Z"
    }
  }
} 

[2024-11-14T01:46:53.388Z] [ERROR] Failed to initialize Polybase {
  "error": {}
} 

[2024-11-14T01:46:53.391Z] [ERROR] Unhandled Rejection {
  "reason": {}
} 

[2024-11-14T01:51:18.791Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T01:51:18.854Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T01:51:18.854Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T01:51:18.855Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 3084633,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T01:51:18.855Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T01:51:18.855Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T01:51:19.075Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T01:51:19.077Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T01:51:19.077Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T01:51:19.077Z"
    }
  }
} 

[2024-11-14T01:51:19.080Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T01:51:19.081Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T01:51:19.081Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T01:51:19.085Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T01:51:19.085Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T01:51:19.086Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T01:51:19.086Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T01:51:19.086Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T01:51:19.208Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T01:51:19.387Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549079387, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T01:51:19.387Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T01:51:19.387Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549079387, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T01:51:19.387Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549079387, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549079387, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T01:51:19.387Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549079387, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T01:51:19.387Z"
    }
  }
} 

[2024-11-14T01:51:19.388Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 3084633,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T01:51:19.388Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T01:51:19.393Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:03:54.610Z] [INFO] Processing user command... {
  "command": "node userRun.js"
} 

[2024-11-14T02:03:54.612Z] [INFO] received query for node {
  "query": {
    "operation": "userRun.js",
    "params": []
  }
} 

[2024-11-14T02:03:54.615Z] [ERROR] failed to execute query for node: Cannot read properties of undefined (reading 'forEach') {
  "stack": "\"Error: failed to execute query for node: Cannot read properties of undefined (reading 'forEach')\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at execQuery (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/db-interface.js:98:16)\\n    at handleClientRequest (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:111:18)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:43:44\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\""
} 

[2024-11-14T02:03:54.616Z] [INFO] CLI command executed {
  "request": {
    "dbType": "node",
    "query": {
      "operation": "userRun.js",
      "params": []
    }
  },
  "response": {
    "success": false,
    "error": {
      "message": "failed to execute query for node: Cannot read properties of undefined (reading 'forEach')",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:03:54.616Z"
    }
  }
} 

[2024-11-14T02:05:51.010Z] [INFO] Processing user command... {
  "command": "retry "
} 

[2024-11-14T02:05:51.011Z] [INFO] received query for retry {
  "query": {
    "operation": "",
    "params": []
  }
} 

[2024-11-14T02:05:51.012Z] [ERROR] failed to execute query for retry: Cannot read properties of undefined (reading 'forEach') {
  "stack": "\"Error: failed to execute query for retry: Cannot read properties of undefined (reading 'forEach')\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at execQuery (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/db-interface.js:98:16)\\n    at handleClientRequest (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:111:18)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:43:44\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\""
} 

[2024-11-14T02:05:51.013Z] [INFO] CLI command executed {
  "request": {
    "dbType": "retry",
    "query": {
      "operation": "",
      "params": []
    }
  },
  "response": {
    "success": false,
    "error": {
      "message": "failed to execute query for retry: Cannot read properties of undefined (reading 'forEach')",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:05:51.013Z"
    }
  }
} 

[2024-11-14T02:05:55.275Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:06:00.841Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:06:00.873Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:06:00.873Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:06:00.875Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 3966646,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:06:00.875Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:06:00.875Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:06:01.119Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:06:01.120Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:06:01.120Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:06:01.120Z"
    }
  }
} 

[2024-11-14T02:06:01.124Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:06:01.124Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:06:01.124Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:06:01.127Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:06:01.127Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:06:01.128Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:06:01.128Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:06:01.128Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:06:01.249Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:06:01.396Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549961396, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:06:01.396Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:06:01.397Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549961396, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:06:01.398Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549961396, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549961396, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:06:01.398Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731549961396, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:06:01.398Z"
    }
  }
} 

[2024-11-14T02:06:01.398Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 3966646,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:06:01.399Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:06:01.402Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:06:06.973Z] [ERROR] CLI error occurred: getCurrentConfig is not defined {
  "stack": "\"Error: CLI error occurred: getCurrentConfig is not defined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:54:39\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\\n    at emitKeys.next (<anonymous>)\\n    at ReadStream.onData (node:internal/readline/emitKeypressEvents:64:36)\""
} 

[2024-11-14T02:06:59.397Z] [ERROR] CLI error occurred: getCurrentConfig is not defined {
  "stack": "\"Error: CLI error occurred: getCurrentConfig is not defined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:54:39\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\\n    at emitKeys.next (<anonymous>)\\n    at ReadStream.onData (node:internal/readline/emitKeypressEvents:64:36)\""
} 

[2024-11-14T02:07:02.535Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:07:14.780Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:07:14.814Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:07:14.814Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:07:14.815Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 4040587,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:07:14.815Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:07:14.815Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:07:14.863Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:07:14.863Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:07:14.864Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:07:14.864Z"
    }
  }
} 

[2024-11-14T02:07:14.865Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:07:14.865Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:07:14.865Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:07:14.867Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:07:14.867Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:07:14.867Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:07:14.867Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:07:14.867Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:07:14.916Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550034916, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:07:14.916Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:07:14.917Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550034916, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:07:14.917Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550034916, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550034916, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:07:14.917Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550034916, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:07:14.917Z"
    }
  }
} 

[2024-11-14T02:07:14.917Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 4040587,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:07:14.917Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:07:14.920Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:07:14.939Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:07:20.659Z] [ERROR] CLI error occurred: getCurrentConfig is not defined {
  "stack": "\"Error: CLI error occurred: getCurrentConfig is not defined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:56:39\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\\n    at emitKeys.next (<anonymous>)\\n    at ReadStream.onData (node:internal/readline/emitKeypressEvents:64:36)\""
} 

[2024-11-14T02:07:57.415Z] [ERROR] CLI error occurred: getCurrentConfig is not defined {
  "stack": "\"Error: CLI error occurred: getCurrentConfig is not defined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:56:39\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\\n    at emitKeys.next (<anonymous>)\\n    at ReadStream.onData (node:internal/readline/emitKeypressEvents:64:36)\""
} 

[2024-11-14T02:10:28.678Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:10:34.470Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:10:34.506Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:10:34.506Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:10:34.507Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 4240281,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:10:34.507Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:10:34.508Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:10:34.623Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:10:34.624Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:10:34.624Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:10:34.624Z"
    }
  }
} 

[2024-11-14T02:10:34.625Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:10:34.625Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:10:34.626Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:10:34.627Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:10:34.627Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:10:34.627Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:10:34.627Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:10:34.628Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:10:34.738Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:10:34.803Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550234803, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:10:34.803Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:10:34.804Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550234803, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:10:34.804Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550234803, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550234803, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:10:34.804Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550234803, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:10:34.804Z"
    }
  }
} 

[2024-11-14T02:10:34.804Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 4240281,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:10:34.805Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:10:34.807Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:10:39.604Z] [ERROR] CLI error occurred: getCurrentConfig is not defined {
  "stack": "\"Error: CLI error occurred: getCurrentConfig is not defined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:63:39\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\\n    at emitKeys.next (<anonymous>)\\n    at ReadStream.onData (node:internal/readline/emitKeypressEvents:64:36)\""
} 

[2024-11-14T02:11:59.712Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:12:05.845Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:12:05.883Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:12:05.884Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:12:05.885Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 4331659,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:12:05.885Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:12:05.885Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:12:06.081Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:12:06.082Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:12:06.082Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:12:06.082Z"
    }
  }
} 

[2024-11-14T02:12:06.085Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:12:06.085Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:12:06.085Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:12:06.088Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:12:06.088Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:12:06.088Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:12:06.089Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:12:06.089Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:12:06.167Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550326167, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:12:06.167Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:12:06.167Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550326167, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:12:06.168Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550326167, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550326167, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:12:06.168Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550326167, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:12:06.168Z"
    }
  }
} 

[2024-11-14T02:12:06.168Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 4331659,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:12:06.169Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:12:06.171Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:12:06.187Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:12:11.489Z] [ERROR] CLI error occurred: getCurrentConfig is not defined {
  "stack": "\"Error: CLI error occurred: getCurrentConfig is not defined\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:69:39\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\\n    at emitKeys.next (<anonymous>)\\n    at ReadStream.onData (node:internal/readline/emitKeypressEvents:64:36)\""
} 

[2024-11-14T02:13:12.313Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:13:23.531Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:13:23.574Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:13:23.574Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:13:23.575Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 12,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 4409349,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:13:23.576Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:13:23.576Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:13:23.841Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:13:23.842Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:13:23.843Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:13:23.843Z"
    }
  }
} 

[2024-11-14T02:13:23.846Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:13:23.846Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:13:23.846Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:13:23.850Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:13:23.850Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:13:23.850Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:13:23.850Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:13:23.850Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:13:23.933Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:13:24.065Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550404065, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:13:24.065Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:13:24.066Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550404065, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:13:24.066Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550404065, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550404065, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:13:24.066Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550404065, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:13:24.066Z"
    }
  }
} 

[2024-11-14T02:13:24.066Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 12,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 4409349,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:13:24.067Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:13:24.509Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:13:24.513Z] [ERROR] Unhandled Rejection {
  "reason": {}
} 

[2024-11-14T02:17:29.139Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:17:29.183Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:17:29.183Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:17:29.184Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 4654961,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:17:29.185Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:17:29.185Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:17:29.442Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:17:29.444Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:17:29.444Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:17:29.444Z"
    }
  }
} 

[2024-11-14T02:17:29.447Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:17:29.447Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:17:29.447Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:17:29.451Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:17:29.451Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:17:29.451Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:17:29.451Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:17:29.452Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:17:29.517Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:17:29.664Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550649664, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:17:29.664Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:17:29.664Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550649664, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:17:29.664Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550649664, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550649664, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:17:29.664Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550649664, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:17:29.664Z"
    }
  }
} 

[2024-11-14T02:17:29.665Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 4654961,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:17:29.665Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:17:29.668Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:17:52.449Z] [ERROR] CLI error occurred: getCurrentConfig is not a function {
  "stack": "\"Error: CLI error occurred: getCurrentConfig is not a function\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:202:35)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:243:13\""
} 

[2024-11-14T02:21:07.315Z] [ERROR] Configuration file "Polybase-Config.json" not found. {
  "stack": "\"Error: Configuration file \\\"Polybase-Config.json\\\" not found.\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at getConfig (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/config-management.js:33:20)\\n    at displayStatus (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/support-commands.js:40:20)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:181:42)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:243:19\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\""
} 

[2024-11-14T02:21:07.316Z] [ERROR] Error displaying status {
  "error": {}
} 

[2024-11-14T02:21:07.316Z] [ERROR] Failed to retrieve status: Cannot destructure property 'connection' of 'state' as it is undefined. {
  "stack": "\"Error: Failed to retrieve status: Cannot destructure property 'connection' of 'state' as it is undefined.\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at displayStatus (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/support-commands.js:62:16)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:181:42)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:243:19\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\""
} 

[2024-11-14T02:21:10.106Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:21:55.518Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:21:55.549Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:21:55.549Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:21:55.550Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 4921328,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:21:55.551Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:21:55.551Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:21:55.722Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:21:55.722Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:21:55.722Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:21:55.722Z"
    }
  }
} 

[2024-11-14T02:21:55.724Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:21:55.724Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:21:55.724Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:21:55.725Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:21:55.725Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:21:55.726Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:21:55.726Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:21:55.726Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:21:55.820Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550915820, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:21:55.820Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:21:55.821Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550915820, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:21:55.821Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550915820, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550915820, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:21:55.821Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731550915820, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:21:55.821Z"
    }
  }
} 

[2024-11-14T02:21:55.821Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 4921328,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:21:55.822Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:21:55.824Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:21:55.826Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:22:28.201Z] [ERROR] Configuration file "Polybase-Config.json" not found. {
  "stack": "\"Error: Configuration file \\\"Polybase-Config.json\\\" not found.\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at getConfig (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/config-management.js:33:20)\\n    at displayStatus (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/support-commands.js:40:20)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:208:42)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:270:19\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\""
} 

[2024-11-14T02:22:28.205Z] [ERROR] Error displaying status {
  "error": {}
} 

[2024-11-14T02:22:28.206Z] [ERROR] Failed to retrieve status: Cannot destructure property 'connection' of 'state' as it is undefined. {
  "stack": "\"Error: Failed to retrieve status: Cannot destructure property 'connection' of 'state' as it is undefined.\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at displayStatus (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/support-commands.js:62:16)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:208:42)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:270:19\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\""
} 

[2024-11-14T02:28:25.371Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:28:35.669Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:28:35.700Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:28:35.700Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:28:35.702Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 5321403,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:28:35.702Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:28:35.702Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:28:35.836Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:28:35.837Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:28:35.838Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:28:35.837Z"
    }
  }
} 

[2024-11-14T02:28:35.841Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:28:35.841Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:28:35.841Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:28:35.844Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:28:35.844Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:28:35.845Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:28:35.845Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:28:35.845Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:28:35.966Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551315966, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:28:35.966Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:28:35.967Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551315966, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:28:35.967Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551315966, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551315966, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:28:35.967Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551315966, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:28:35.967Z"
    }
  }
} 

[2024-11-14T02:28:35.967Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 5321403,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:28:35.968Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:28:35.970Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:28:35.994Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:28:49.291Z] [ERROR] CLI error occurred: Converting circular structure to JSON
    --> starting at object with constructor 'MongoClient'
    |     property 's' -> object with constructor 'Object'
    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'
    --- property 'client' closes the circle {
  "error": {}
} 

[2024-11-14T02:30:31.488Z] [INFO] Processing user command... {
  "command": "clear"
} 

[2024-11-14T02:30:31.490Z] [INFO] received query for clear {
  "query": {
    "params": []
  }
} 

[2024-11-14T02:30:31.491Z] [ERROR] failed to execute query for clear: Cannot read properties of undefined (reading 'forEach') {
  "stack": "\"Error: failed to execute query for clear: Cannot read properties of undefined (reading 'forEach')\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at execQuery (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/db-interface.js:98:16)\\n    at handleClientRequest (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:344:18)\\n    at handleCustomCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:286:32)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:250:27)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:294:19\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\""
} 

[2024-11-14T02:30:31.492Z] [INFO] CLI command executed {
  "request": {
    "dbType": "clear",
    "query": {
      "params": []
    }
  },
  "response": {
    "success": false,
    "error": {
      "message": "failed to execute query for clear: Cannot read properties of undefined (reading 'forEach')",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:30:31.492Z"
    }
  }
} 

[2024-11-14T02:32:10.730Z] [INFO] Processing user command... {
  "command": "clear"
} 

[2024-11-14T02:32:10.731Z] [INFO] received query for clear {
  "query": {
    "params": []
  }
} 

[2024-11-14T02:32:10.732Z] [ERROR] failed to execute query for clear: Cannot read properties of undefined (reading 'forEach') {
  "stack": "\"Error: failed to execute query for clear: Cannot read properties of undefined (reading 'forEach')\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at execQuery (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/db-interface.js:98:16)\\n    at handleClientRequest (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:344:18)\\n    at handleCustomCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:286:32)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:250:27)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:294:19\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\""
} 

[2024-11-14T02:32:10.732Z] [INFO] CLI command executed {
  "request": {
    "dbType": "clear",
    "query": {
      "params": []
    }
  },
  "response": {
    "success": false,
    "error": {
      "message": "failed to execute query for clear: Cannot read properties of undefined (reading 'forEach')",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:32:10.732Z"
    }
  }
} 

[2024-11-14T02:32:13.225Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:32:22.398Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:32:22.429Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:32:22.429Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:32:22.430Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 5548128,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:32:22.430Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:32:22.430Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:32:22.673Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:32:22.673Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:32:22.674Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:32:22.674Z"
    }
  }
} 

[2024-11-14T02:32:22.677Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:32:22.677Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:32:22.677Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:32:22.680Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:32:22.680Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:32:22.680Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:32:22.681Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:32:22.681Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:32:22.779Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551542779, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:32:22.779Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:32:22.779Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551542779, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:32:22.779Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551542779, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551542779, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:32:22.779Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551542779, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:32:22.779Z"
    }
  }
} 

[2024-11-14T02:32:22.780Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 5548128,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:32:22.780Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:32:22.783Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:32:22.806Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:33:24.774Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:33:32.868Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:33:32.898Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:33:32.898Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:33:32.899Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 5618597,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:33:32.899Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:33:32.900Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:33:32.950Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:33:32.950Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:33:32.952Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:33:32.952Z"
    }
  }
} 

[2024-11-14T02:33:32.954Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:33:32.954Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:33:32.954Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:33:32.956Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:33:32.956Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:33:32.956Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:33:32.956Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:33:32.956Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:33:33.005Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551613005, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:33:33.005Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:33:33.005Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551613005, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:33:33.005Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551613005, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551613005, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:33:33.006Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551613005, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:33:33.006Z"
    }
  }
} 

[2024-11-14T02:33:33.006Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 5618597,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:33:33.006Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:33:33.009Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:33:33.101Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:35:05.690Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:35:10.848Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:35:10.881Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:35:10.881Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:35:10.882Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 5716578,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:35:10.883Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:35:10.883Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:35:11.141Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:35:11.142Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:35:11.143Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:35:11.143Z"
    }
  }
} 

[2024-11-14T02:35:11.146Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:35:11.146Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:35:11.146Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:35:11.149Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:35:11.150Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:35:11.150Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:35:11.150Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:35:11.150Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:35:11.256Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551711255, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:35:11.256Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:35:11.256Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551711255, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:35:11.256Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551711255, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551711255, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:35:11.257Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551711255, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:35:11.257Z"
    }
  }
} 

[2024-11-14T02:35:11.257Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 5716578,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:35:11.258Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:35:11.260Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:35:11.276Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:36:20.096Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:36:26.758Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:36:26.792Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:36:26.792Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:36:26.793Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 5792488,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:36:26.794Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:36:26.794Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:36:26.844Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:36:26.845Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:36:26.845Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:36:26.845Z"
    }
  }
} 

[2024-11-14T02:36:26.846Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:36:26.847Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:36:26.847Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:36:26.848Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:36:26.848Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:36:26.848Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:36:26.848Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:36:26.849Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:36:26.898Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551786898, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:36:26.898Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:36:26.898Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551786898, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:36:26.898Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551786898, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551786898, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:36:26.899Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731551786898, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:36:26.899Z"
    }
  }
} 

[2024-11-14T02:36:26.899Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 5792488,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:36:26.899Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:36:26.901Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:36:26.917Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:36:52.770Z] [ERROR] Error during retry process {
  "error": {}
} 

[2024-11-14T02:41:20.444Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:41:29.560Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:41:29.594Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:41:29.594Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:41:29.595Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 6095286,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:41:29.595Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:41:29.595Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:41:29.700Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:41:29.701Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:41:29.701Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:41:29.701Z"
    }
  }
} 

[2024-11-14T02:41:29.702Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:41:29.703Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:41:29.703Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:41:29.704Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:41:29.704Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:41:29.704Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:41:29.704Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:41:29.705Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:41:29.768Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:41:29.822Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552089822, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:41:29.822Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:41:29.823Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552089822, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:41:29.823Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552089822, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552089822, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:41:29.823Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552089822, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:41:29.823Z"
    }
  }
} 

[2024-11-14T02:41:29.824Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 6095286,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connect",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          {
            "command": {
              "name": "auth",
              "inTransaction": false,
              "isResolved": false,
              "transformed": true,
              "replyEncoding": "utf8",
              "args": [
                "default",
                "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
              ],
              "promise": {}
            },
            "select": 0
          },
          {
            "command": {
              "name": "info",
              "inTransaction": false,
              "isResolved": false,
              "transformed": true,
              "replyEncoding": "utf8",
              "args": [],
              "promise": {}
            },
            "select": 0
          },
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:41:29.824Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:41:29.827Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:41:46.840Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:41:52.448Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:41:52.480Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:41:52.480Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:41:52.482Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 6118172,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:41:52.482Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:41:52.482Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:41:52.536Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:41:52.537Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:41:52.537Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:41:52.537Z"
    }
  }
} 

[2024-11-14T02:41:52.539Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:41:52.539Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:41:52.539Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:41:52.541Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:41:52.541Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:41:52.541Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:41:52.541Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:41:52.542Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:41:52.590Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552112590, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:41:52.591Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:41:52.591Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552112590, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:41:52.591Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552112590, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552112590, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:41:52.591Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552112590, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:41:52.591Z"
    }
  }
} 

[2024-11-14T02:41:52.591Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 6118172,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:41:52.592Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:41:52.594Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:41:52.694Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:46:16.344Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:46:22.090Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:46:22.125Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:46:22.125Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:46:22.127Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 6387813,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:46:22.127Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:46:22.127Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:46:22.257Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:46:22.259Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:175:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:46:22.260Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:46:22.260Z"
    }
  }
} 

[2024-11-14T02:46:22.263Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:46:22.263Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:46:22.264Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:46:22.266Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:46:22.267Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:46:22.267Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:46:22.267Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:46:22.267Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:46:22.392Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T02:46:22.448Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552382447, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:46:22.448Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:46:22.448Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552382447, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:46:22.448Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552382447, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552382447, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:172:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:193:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:46:22.449Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552382447, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:46:22.449Z"
    }
  }
} 

[2024-11-14T02:46:22.449Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 6387813,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connect",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          {
            "command": {
              "name": "auth",
              "inTransaction": false,
              "isResolved": false,
              "transformed": true,
              "replyEncoding": "utf8",
              "args": [
                "default",
                "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
              ],
              "promise": {}
            },
            "select": 0
          },
          {
            "command": {
              "name": "info",
              "inTransaction": false,
              "isResolved": false,
              "transformed": true,
              "replyEncoding": "utf8",
              "args": [],
              "promise": {}
            },
            "select": 0
          },
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:46:22.450Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:46:22.452Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:50:43.327Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T02:50:47.343Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:50:47.377Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T02:50:47.377Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:50:47.378Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 6653061,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T02:50:47.378Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T02:50:47.378Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T02:50:47.572Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T02:50:47.573Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:50:47.574Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:50:47.574Z"
    }
  }
} 

[2024-11-14T02:50:47.577Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T02:50:47.577Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T02:50:47.577Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T02:50:47.580Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T02:50:47.580Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T02:50:47.580Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T02:50:47.580Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T02:50:47.581Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T02:50:47.672Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552647672, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:50:47.673Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T02:50:47.673Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552647672, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T02:50:47.673Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552647672, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552647672, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T02:50:47.674Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731552647672, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T02:50:47.674Z"
    }
  }
} 

[2024-11-14T02:50:47.674Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 6653061,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T02:50:47.674Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T02:50:47.678Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T02:50:47.778Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:00:17.978Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:03:34.973Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:03:35.047Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:03:35.047Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:03:35.049Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 7,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 7420671,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:03:35.049Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:03:35.049Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:03:35.204Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:03:35.207Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:03:35.207Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:03:35.207Z"
    }
  }
} 

[2024-11-14T03:03:35.211Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:03:35.212Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:03:35.212Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:03:35.215Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:03:35.215Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:03:35.216Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:03:35.216Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:03:35.216Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:03:35.278Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:03:35.368Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553415367, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:03:35.368Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:03:35.368Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553415367, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:03:35.368Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553415367, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553415367, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:03:35.368Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553415367, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:03:35.368Z"
    }
  }
} 

[2024-11-14T03:03:35.368Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 7,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 7420671,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connect",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          {
            "command": {
              "name": "auth",
              "inTransaction": false,
              "isResolved": false,
              "transformed": true,
              "replyEncoding": "utf8",
              "args": [
                "default",
                "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
              ],
              "promise": {}
            },
            "select": 0
          },
          {
            "command": {
              "name": "info",
              "inTransaction": false,
              "isResolved": false,
              "transformed": true,
              "replyEncoding": "utf8",
              "args": [],
              "promise": {}
            },
            "select": 0
          },
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:03:35.369Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:03:35.373Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:03:45.656Z] [ERROR] CLI error occurred: displayStatus is not defined {
  "error": {}
} 

[2024-11-14T03:05:43.023Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:05:52.425Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:05:52.468Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:05:52.482Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:05:52.484Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 15,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 7558089,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:05:52.501Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:05:52.502Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:05:52.758Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:05:52.759Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:05:52.760Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:05:52.760Z"
    }
  }
} 

[2024-11-14T03:05:52.763Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:05:52.763Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:05:52.764Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:05:52.767Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:05:52.767Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:05:52.767Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:05:52.767Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:05:52.767Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:05:52.821Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:05:52.869Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553552869, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:05:52.869Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:05:52.869Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553552869, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:05:52.869Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553552869, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553552869, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:05:52.870Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553552869, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:05:52.869Z"
    }
  }
} 

[2024-11-14T03:05:52.870Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 15,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 7558089,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:05:52.870Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:05:52.873Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:10:56.337Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:11:00.374Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:11:00.405Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:11:00.406Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:11:00.407Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 7866019,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:11:00.407Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:11:00.407Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:11:00.559Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:11:00.560Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:11:00.561Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:11:00.561Z"
    }
  }
} 

[2024-11-14T03:11:00.564Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:11:00.564Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:11:00.564Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:11:00.567Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:11:00.567Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:11:00.567Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:11:00.568Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:11:00.568Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:11:00.660Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553860660, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:11:00.660Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:11:00.661Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553860660, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:11:00.661Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553860660, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553860660, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:11:00.661Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553860660, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:11:00.661Z"
    }
  }
} 

[2024-11-14T03:11:00.662Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 7866019,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:11:00.662Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:11:00.665Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:11:00.760Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:11:29.583Z] [ERROR] Error displaying status {
  "error": {}
} 

[2024-11-14T03:11:29.586Z] [ERROR] Failed to retrieve status: Cannot destructure property 'connection' of 'state' as it is undefined. {
  "stack": "\"Error: Failed to retrieve status: Cannot destructure property 'connection' of 'state' as it is undefined.\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at displayStatus (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:230:16)\\n    at handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:274:42)\\n    at /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:322:19\\n    at [_onLine] [as _onLine] (node:internal/readline/interface:414:7)\\n    at [_line] [as _line] (node:internal/readline/interface:887:18)\\n    at [_ttyWrite] [as _ttyWrite] (node:internal/readline/interface:1265:22)\\n    at ReadStream.onkeypress (node:internal/readline/interface:264:20)\\n    at ReadStream.emit (node:events:518:28)\\n    at emitKeys (node:internal/readline/utils:371:14)\""
} 

[2024-11-14T03:12:31.996Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:12:36.266Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:12:36.298Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:12:36.299Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:12:36.300Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 7961910,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:12:36.300Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:12:36.300Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:12:37.464Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:12:37.465Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:12:37.466Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:12:37.466Z"
    }
  }
} 

[2024-11-14T03:12:37.469Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:12:37.469Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:12:37.469Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:12:37.472Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:12:37.472Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:12:37.472Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:12:37.473Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:12:37.473Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:12:37.565Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553957564, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:12:37.565Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:12:37.565Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553957564, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:12:37.565Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553957564, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553957564, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:12:37.566Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731553957564, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:12:37.566Z"
    }
  }
} 

[2024-11-14T03:12:37.566Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 7961910,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:12:37.566Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:12:37.569Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:12:37.595Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:21:47.065Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:21:55.187Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:21:55.220Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:21:55.220Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:21:55.221Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 8520798,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:21:55.222Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:21:55.222Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:21:55.331Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:21:55.331Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:21:55.331Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:21:55.331Z"
    }
  }
} 

[2024-11-14T03:21:55.333Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:21:55.333Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:21:55.333Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:21:55.335Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:21:55.335Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:21:55.335Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:21:55.335Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:21:55.335Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:21:55.414Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:21:55.547Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554515547, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:21:55.547Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:21:55.547Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554515547, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:21:55.548Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554515547, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554515547, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:21:55.548Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554515547, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:21:55.548Z"
    }
  }
} 

[2024-11-14T03:21:55.548Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 8520798,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:21:55.548Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:21:55.551Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:22:45.573Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:23:05.243Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:23:05.291Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:23:05.292Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:23:05.293Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 6,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 8590867,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:23:05.294Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:23:05.294Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:23:05.345Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:23:05.346Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:23:05.346Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:23:05.346Z"
    }
  }
} 

[2024-11-14T03:23:05.347Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:23:05.347Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:23:05.347Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:23:05.350Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:23:05.350Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:23:05.350Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:23:05.350Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:23:05.350Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:23:05.408Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554585408, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:23:05.408Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:23:05.409Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554585408, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:23:05.409Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554585408, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554585408, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:23:05.409Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554585408, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:23:05.409Z"
    }
  }
} 

[2024-11-14T03:23:05.409Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 6,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 8590867,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:23:05.410Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:23:05.415Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:23:05.448Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:24:46.365Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:24:52.907Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:24:52.938Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:24:52.939Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:24:52.940Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 8698511,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:24:52.940Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:24:52.940Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:24:53.131Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:24:53.132Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:24:53.132Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:24:53.132Z"
    }
  }
} 

[2024-11-14T03:24:53.135Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:24:53.135Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:24:53.135Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:24:53.138Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:24:53.138Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:24:53.138Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:24:53.139Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:24:53.139Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:24:53.226Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554693226, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:24:53.227Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:24:53.227Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554693226, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:24:53.227Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554693226, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554693226, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:24:53.227Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554693226, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:24:53.227Z"
    }
  }
} 

[2024-11-14T03:24:53.228Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 8698511,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:24:53.228Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:24:53.231Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:24:53.300Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:28:33.981Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:28:38.276Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:28:38.308Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:28:38.308Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:28:38.309Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 4,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 8923874,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:28:38.309Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:28:38.309Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:28:38.474Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:28:38.475Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:28:38.475Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:28:38.475Z"
    }
  }
} 

[2024-11-14T03:28:38.478Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:28:38.478Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:28:38.478Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:28:38.481Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:28:38.481Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:28:38.481Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:28:38.481Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:28:38.481Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:28:38.588Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554918588, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:28:38.588Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:28:38.589Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554918588, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:28:38.589Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554918588, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554918588, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:28:38.589Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731554918588, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:28:38.589Z"
    }
  }
} 

[2024-11-14T03:28:38.589Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 4,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 8923874,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:28:38.590Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:28:38.592Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:28:38.650Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:45:24.068Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:45:29.288Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:45:29.319Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:45:29.319Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:45:29.321Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 5,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 9934857,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:45:29.321Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:45:29.321Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:45:29.532Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:45:29.533Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:45:29.533Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:45:29.533Z"
    }
  }
} 

[2024-11-14T03:45:29.536Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:45:29.536Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:45:29.536Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:45:29.539Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:45:29.539Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:45:29.539Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:45:29.539Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:45:29.539Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:45:29.614Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731555929614, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:45:29.614Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:45:29.615Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731555929614, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:45:29.615Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731555929614, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731555929614, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:45:29.615Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731555929614, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:45:29.615Z"
    }
  }
} 

[2024-11-14T03:45:29.615Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 5,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 9934857,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:45:29.616Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:45:29.618Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:45:29.677Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:48:04.803Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-14T03:49:40.823Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:49:40.869Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:49:40.870Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:49:40.871Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 0,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 7,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 10186414,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:49:40.871Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:49:40.871Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:49:41.088Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:49:41.088Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:163:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:49:41.089Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:49:41.089Z"
    }
  }
} 

[2024-11-14T03:49:41.090Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:49:41.090Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:49:41.090Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:49:41.092Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:49:41.092Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:49:41.093Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:49:41.093Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:49:41.093Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:49:41.146Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:49:41.289Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556181289, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:49:41.289Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:49:41.289Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556181289, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:49:41.290Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556181289, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556181289, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:160:34)\\n    at async initPolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/init.js:180:28)\\n    at async initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:307:30)\""
} 

[2024-11-14T03:49:41.290Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556181289, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:49:41.290Z"
    }
  }
} 

[2024-11-14T03:49:41.290Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 0,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 7,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 10186414,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "ready",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 2,
      "commandQueue": {
        "_head": 2,
        "_tail": 2,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": false,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 0
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:49:41.290Z] [INFO] ✔ Polybase initialized successfully. {
  "interfaces": [
    "mongo",
    "redis",
    "influx"
  ]
} 

[2024-11-14T03:49:41.294Z] [INFO] Polybase initialized successfully. Please fill in the .env file with your database configuration. {} 

[2024-11-14T03:53:43.610Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:53:43.617Z] [INFO] ✔ Connection to MongoDB established. {
  "database": "polybase_mongo"
} 

[2024-11-14T03:53:43.617Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:53:43.618Z] [INFO] Added connection for mongo {
  "dbType": "mongo",
  "connectionDetails": "{\n  \"s\": {\n    \"options\": {\n      \"enableUtf8Validation\": true,\n      \"forceServerObjectId\": false,\n      \"pkFactory\": {},\n      \"raw\": false,\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"retryWrites\": true\n    },\n    \"readPreference\": {\n      \"mode\": \"primary\"\n    },\n    \"bsonOptions\": {\n      \"raw\": false,\n      \"useBigInt64\": false,\n      \"promoteLongs\": true,\n      \"promoteValues\": true,\n      \"promoteBuffers\": false,\n      \"ignoreUndefined\": false,\n      \"bsonRegExp\": false,\n      \"serializeFunctions\": false,\n      \"fieldsAsRaw\": {},\n      \"enableUtf8Validation\": true\n    },\n    \"pkFactory\": \"[Circular]\",\n    \"namespace\": {\n      \"db\": \"polybase_mongo\"\n    }\n  },\n  \"client\": {\n    \"_events\": {},\n    \"_eventsCount\": 0,\n    \"s\": {\n      \"url\": \"mongodb://localhost:27017\",\n      \"bsonOptions\": {\n        \"raw\": false,\n        \"useBigInt64\": false,\n        \"promoteLongs\": true,\n        \"promoteValues\": true,\n        \"promoteBuffers\": false,\n        \"ignoreUndefined\": false,\n        \"bsonRegExp\": false,\n        \"serializeFunctions\": false,\n        \"fieldsAsRaw\": \"[Circular]\",\n        \"enableUtf8Validation\": true\n      },\n      \"namespace\": {\n        \"db\": \"admin\"\n      },\n      \"hasBeenClosed\": false,\n      \"sessionPool\": {\n        \"client\": \"[Circular]\",\n        \"sessions\": {\n          \"count\": 0,\n          \"head\": {\n            \"next\": \"[Circular]\",\n            \"prev\": \"[Circular]\",\n            \"value\": null\n          }\n        }\n      },\n      \"activeSessions\": {},\n      \"authProviders\": {\n        \"existingProviders\": {}\n      },\n      \"options\": {\n        \"hosts\": [\n          {\n            \"host\": \"localhost\",\n            \"port\": 27017,\n            \"isIPv6\": false\n          }\n        ],\n        \"autoSelectFamily\": true,\n        \"compressors\": [\n          \"none\"\n        ],\n        \"connectTimeoutMS\": 30000,\n        \"directConnection\": false,\n        \"driverInfo\": {},\n        \"enableUtf8Validation\": true,\n        \"forceServerObjectId\": false,\n        \"heartbeatFrequencyMS\": 10000,\n        \"loadBalanced\": false,\n        \"localThresholdMS\": 15,\n        \"maxConnecting\": 2,\n        \"maxIdleTimeMS\": 0,\n        \"maxPoolSize\": 10,\n        \"minPoolSize\": 0,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"monitorCommands\": false,\n        \"noDelay\": true,\n        \"pkFactory\": \"[Circular]\",\n        \"raw\": false,\n        \"readPreference\": {\n          \"mode\": \"primary\"\n        },\n        \"retryReads\": true,\n        \"retryWrites\": true,\n        \"serverMonitoringMode\": \"auto\",\n        \"serverSelectionTimeoutMS\": 30000,\n        \"socketTimeoutMS\": 0,\n        \"srvMaxHosts\": 0,\n        \"srvServiceName\": \"mongodb\",\n        \"waitQueueTimeoutMS\": 0,\n        \"zlibCompressionLevel\": 0,\n        \"dbName\": \"test\",\n        \"userSpecifiedAuthSource\": false,\n        \"userSpecifiedReplicaSet\": false,\n        \"mongoLoggerOptions\": {\n          \"componentSeverities\": {\n            \"command\": \"off\",\n            \"topology\": \"off\",\n            \"serverSelection\": \"off\",\n            \"connection\": \"off\",\n            \"client\": \"off\",\n            \"default\": \"off\"\n          },\n          \"maxDocumentLength\": 1000,\n          \"logDestination\": {},\n          \"logDestinationIsStdErr\": true\n        },\n        \"metadata\": {\n          \"driver\": {\n            \"name\": \"nodejs\",\n            \"version\": \"6.9.0\"\n          },\n          \"platform\": \"Node.js v20.11.0, LE\",\n          \"os\": {\n            \"name\": \"darwin\",\n            \"architecture\": \"x64\",\n            \"version\": \"23.3.0\",\n            \"type\": \"Darwin\"\n          }\n        },\n        \"extendedMetadata\": {}\n      },\n      \"readPreference\": {\n        \"mode\": \"primary\"\n      },\n      \"isMongoClient\": true\n    },\n    \"topology\": {\n      \"_events\": {},\n      \"_eventsCount\": 26,\n      \"client\": \"[Circular]\",\n      \"s\": {\n        \"id\": 1,\n        \"options\": \"[Circular]\",\n        \"seedlist\": [\n          \"[Circular]\"\n        ],\n        \"state\": \"connected\",\n        \"description\": {\n          \"type\": \"Single\",\n          \"servers\": {\n            \"localhost:27017\": {\n              \"address\": \"localhost:27017\",\n              \"type\": \"Standalone\",\n              \"hosts\": [],\n              \"passives\": [],\n              \"arbiters\": [],\n              \"tags\": {},\n              \"minWireVersion\": 0,\n              \"maxWireVersion\": 21,\n              \"roundTripTime\": 1,\n              \"minRoundTripTime\": 0,\n              \"lastUpdateTime\": 10429157,\n              \"lastWriteDate\": 0,\n              \"error\": null,\n              \"topologyVersion\": {\n                \"processId\": {\n                  \"$oid\": \"67354bae87f3f5e3ef1c7503\"\n                },\n                \"counter\": 0\n              },\n              \"setName\": null,\n              \"setVersion\": null,\n              \"electionId\": null,\n              \"logicalSessionTimeoutMinutes\": 30,\n              \"primary\": null,\n              \"me\": null,\n              \"$clusterTime\": null\n            }\n          },\n          \"stale\": false,\n          \"compatible\": true,\n          \"heartbeatFrequencyMS\": 10000,\n          \"localThresholdMS\": 15,\n          \"setName\": null,\n          \"maxElectionId\": null,\n          \"maxSetVersion\": null,\n          \"commonWireVersion\": 0,\n          \"logicalSessionTimeoutMinutes\": 30\n        },\n        \"serverSelectionTimeoutMS\": 30000,\n        \"heartbeatFrequencyMS\": 10000,\n        \"minHeartbeatFrequencyMS\": 500,\n        \"servers\": {},\n        \"connectionTimers\": {}\n      },\n      \"component\": \"topology\"\n    }\n  }\n}"
} 

[2024-11-14T03:53:43.618Z] [INFO] Set config for mongo {
  "config": {
    "uri": "mongodb://localhost:27017",
    "database": "polybase_mongo"
  }
} 

[2024-11-14T03:53:43.618Z] [INFO] ✔ Connection to mongo established. {} 

[2024-11-14T03:53:43.752Z] [ERROR] PostgreSQL connection error {
  "error": {
    "length": 52,
    "name": "error",
    "severity": "FATAL",
    "code": "XX000"
  }
} 

[2024-11-14T03:53:43.753Z] [ERROR] PostgreSQL connection error: Tenant or user not found {
  "stack": "\"Error: PostgreSQL connection error: Tenant or user not found\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configurePostgresConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:312:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/db-connections.js:31:34)\\n    at async handleRetryCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:325:32)\\n    at async handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:301:21)\\n    at async /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:339:13\""
} 

[2024-11-14T03:53:43.753Z] [ERROR] Failed to connect to postgres: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "PostgreSQL connection error: Tenant or user not found",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:53:43.753Z"
    }
  }
} 

[2024-11-14T03:53:43.754Z] [INFO] Added connection for redis {
  "dbType": "redis",
  "connectionDetails": "{\n  \"options\": {\n    \"host\": \"redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com\",\n    \"port\": 17909,\n    \"username\": \"default\",\n    \"password\": \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\",\n    \"family\": 4,\n    \"connectTimeout\": 10000,\n    \"disconnectTimeout\": 2000,\n    \"keepAlive\": 0,\n    \"noDelay\": true,\n    \"connectionName\": null,\n    \"sentinels\": null,\n    \"name\": null,\n    \"role\": \"master\",\n    \"natMap\": null,\n    \"enableTLSForSentinelMode\": false,\n    \"updateSentinels\": true,\n    \"failoverDetector\": false,\n    \"db\": 0,\n    \"enableOfflineQueue\": true,\n    \"enableReadyCheck\": true,\n    \"autoResubscribe\": true,\n    \"autoResendUnfulfilledCommands\": true,\n    \"lazyConnect\": false,\n    \"keyPrefix\": \"\",\n    \"reconnectOnError\": null,\n    \"readOnly\": false,\n    \"stringNumbers\": false,\n    \"maxRetriesPerRequest\": 20,\n    \"maxLoadingRetryTime\": 10000,\n    \"enableAutoPipelining\": false,\n    \"autoPipeliningIgnoredCommands\": [],\n    \"sentinelMaxConnections\": 10\n  },\n  \"scriptsSet\": {},\n  \"addedBuiltinSet\": {},\n  \"status\": \"connecting\",\n  \"isCluster\": false,\n  \"reconnectTimeout\": null,\n  \"connectionEpoch\": 1,\n  \"retryAttempts\": 0,\n  \"manuallyClosing\": false,\n  \"_autoPipelines\": {},\n  \"_runningAutoPipelines\": {},\n  \"_events\": {},\n  \"_eventsCount\": 2,\n  \"commandQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"offlineQueue\": {\n    \"_head\": 0,\n    \"_tail\": 0,\n    \"_capacityMask\": 3,\n    \"_list\": [\n      null,\n      null,\n      null,\n      null\n    ]\n  },\n  \"connector\": {\n    \"connecting\": true,\n    \"disconnectTimeout\": 2000,\n    \"options\": \"[Circular]\"\n  },\n  \"condition\": {\n    \"select\": 0,\n    \"auth\": [\n      \"default\",\n      \"9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn\"\n    ],\n    \"subscriber\": false\n  }\n}"
} 

[2024-11-14T03:53:43.754Z] [INFO] Set config for redis {
  "config": {
    "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
    "port": 17909,
    "username": "default",
    "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
  }
} 

[2024-11-14T03:53:43.754Z] [INFO] ✔ Connection to redis established. {} 

[2024-11-14T03:53:43.755Z] [INFO] ✔ Connection to InfluxDB initialized. {
  "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
} 

[2024-11-14T03:53:43.755Z] [INFO] Added connection for influx {
  "dbType": "influx",
  "connectionDetails": "{\n  \"_options\": {\n    \"url\": \"https://us-east-1-1.aws.cloud2.influxdata.com\"\n  },\n  \"transport\": {\n    \"chunkCombiner\": {},\n    \"defaultOptions\": {\n      \"timeout\": 10000,\n      \"port\": null,\n      \"protocol\": \"https:\",\n      \"hostname\": \"us-east-1-1.aws.cloud2.influxdata.com\"\n    },\n    \"contextPath\": \"\",\n    \"headers\": {\n      \"User-Agent\": \"influxdb-client-js/1.35.0\"\n    }\n  }\n}"
} 

[2024-11-14T03:53:43.755Z] [INFO] Set config for influx {
  "config": {
    "url": "https://us-east-1-1.aws.cloud2.influxdata.com",
    "token": "Uvj-fDGE8SoRZadtfffle8cmOV2PajiOmL5szIPuuVPkXMSPMhsT1FkM5E2n9KZg3ECwNVK9Ql7--3l280e8TA==",
    "org": "polybase-testing",
    "bucket": "polybase-testing"
  }
} 

[2024-11-14T03:53:43.755Z] [INFO] ✔ Connection to influx established. {} 

[2024-11-14T03:53:43.755Z] [INFO] Starting task {
  "activeWorkers": 1
} 

[2024-11-14T03:53:43.793Z] [ERROR] Error in worker pool task {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556423793, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:53:43.793Z] [INFO] Task finished {
  "activeWorkers": 0
} 

[2024-11-14T03:53:43.793Z] [ERROR] Neo4j connection error {
  "error": {
    "gqlStatus": "50N42",
    "gqlStatusDescription": "error: general processing exception - unexpected error. Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556423793, routers=[], readers=[], writers=[]]",
    "diagnosticRecord": {
      "OPERATION": "",
      "OPERATION_CODE": "0",
      "CURRENT_SCHEMA": "/"
    },
    "classification": "UNKNOWN",
    "name": "Neo4jError",
    "code": "ServiceUnavailable",
    "retriable": true
  }
} 

[2024-11-14T03:53:43.794Z] [ERROR] Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556423793, routers=[], readers=[], writers=[]] {
  "stack": "\"Error: Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556423793, routers=[], readers=[], writers=[]]\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at configureNeo4jConnection (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/connection-pool.js:272:11)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n    at async configureDatabaseConnections (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/db-connections.js:28:34)\\n    at async handleRetryCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:325:32)\\n    at async handleCommand (/Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:301:21)\\n    at async /Users/zar/Codesmith/Polybase/Polybase-Package/source/presentation/cli-interface.js:339:13\""
} 

[2024-11-14T03:53:43.794Z] [ERROR] Failed to connect to neo4j: undefined {
  "error": {
    "success": false,
    "error": {
      "message": "Neo4j connection error: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1731556423793, routers=[], readers=[], writers=[]]",
      "code": 500,
      "details": "",
      "timestamp": "2024-11-14T03:53:43.794Z"
    }
  }
} 

[2024-11-14T03:53:43.794Z] [INFO] Polybase instance initialized with interfaces {
  "interfaces": {
    "mongo": {
      "s": {
        "options": {
          "enableUtf8Validation": true,
          "forceServerObjectId": false,
          "pkFactory": {},
          "raw": false,
          "readPreference": {
            "mode": "primary"
          },
          "retryWrites": true
        },
        "readPreference": {
          "mode": "primary"
        },
        "bsonOptions": {
          "raw": false,
          "useBigInt64": false,
          "promoteLongs": true,
          "promoteValues": true,
          "promoteBuffers": false,
          "ignoreUndefined": false,
          "bsonRegExp": false,
          "serializeFunctions": false,
          "fieldsAsRaw": {},
          "enableUtf8Validation": true
        },
        "pkFactory": "[Circular]",
        "namespace": {
          "db": "polybase_mongo"
        }
      },
      "client": {
        "_events": {},
        "_eventsCount": 0,
        "s": {
          "url": "mongodb://localhost:27017",
          "bsonOptions": {
            "raw": false,
            "useBigInt64": false,
            "promoteLongs": true,
            "promoteValues": true,
            "promoteBuffers": false,
            "ignoreUndefined": false,
            "bsonRegExp": false,
            "serializeFunctions": false,
            "fieldsAsRaw": "[Circular]",
            "enableUtf8Validation": true
          },
          "namespace": {
            "db": "admin"
          },
          "hasBeenClosed": false,
          "sessionPool": {
            "client": "[Circular]",
            "sessions": {
              "count": 0,
              "head": {
                "next": "[Circular]",
                "prev": "[Circular]",
                "value": null
              }
            }
          },
          "activeSessions": {},
          "authProviders": {
            "existingProviders": {}
          },
          "options": {
            "hosts": [
              {
                "host": "localhost",
                "port": 27017,
                "isIPv6": false
              }
            ],
            "autoSelectFamily": true,
            "compressors": [
              "none"
            ],
            "connectTimeoutMS": 30000,
            "directConnection": false,
            "driverInfo": {},
            "enableUtf8Validation": true,
            "forceServerObjectId": false,
            "heartbeatFrequencyMS": 10000,
            "loadBalanced": false,
            "localThresholdMS": 15,
            "maxConnecting": 2,
            "maxIdleTimeMS": 0,
            "maxPoolSize": 10,
            "minPoolSize": 0,
            "minHeartbeatFrequencyMS": 500,
            "monitorCommands": false,
            "noDelay": true,
            "pkFactory": "[Circular]",
            "raw": false,
            "readPreference": {
              "mode": "primary"
            },
            "retryReads": true,
            "retryWrites": true,
            "serverMonitoringMode": "auto",
            "serverSelectionTimeoutMS": 30000,
            "socketTimeoutMS": 0,
            "srvMaxHosts": 0,
            "srvServiceName": "mongodb",
            "waitQueueTimeoutMS": 0,
            "zlibCompressionLevel": 0,
            "dbName": "test",
            "userSpecifiedAuthSource": false,
            "userSpecifiedReplicaSet": false,
            "mongoLoggerOptions": {
              "componentSeverities": {
                "command": "off",
                "topology": "off",
                "serverSelection": "off",
                "connection": "off",
                "client": "off",
                "default": "off"
              },
              "maxDocumentLength": 1000,
              "logDestination": {},
              "logDestinationIsStdErr": true
            },
            "metadata": {
              "driver": {
                "name": "nodejs",
                "version": "6.9.0"
              },
              "platform": "Node.js v20.11.0, LE",
              "os": {
                "name": "darwin",
                "architecture": "x64",
                "version": "23.3.0",
                "type": "Darwin"
              }
            },
            "extendedMetadata": {}
          },
          "readPreference": {
            "mode": "primary"
          },
          "isMongoClient": true
        },
        "topology": {
          "_events": {},
          "_eventsCount": 26,
          "client": "[Circular]",
          "s": {
            "id": 1,
            "options": "[Circular]",
            "seedlist": [
              "[Circular]"
            ],
            "state": "connected",
            "description": {
              "type": "Single",
              "servers": {
                "localhost:27017": {
                  "address": "localhost:27017",
                  "type": "Standalone",
                  "hosts": [],
                  "passives": [],
                  "arbiters": [],
                  "tags": {},
                  "minWireVersion": 0,
                  "maxWireVersion": 21,
                  "roundTripTime": 1,
                  "minRoundTripTime": 0,
                  "lastUpdateTime": 10429157,
                  "lastWriteDate": 0,
                  "error": null,
                  "topologyVersion": {
                    "processId": {
                      "$oid": "67354bae87f3f5e3ef1c7503"
                    },
                    "counter": 0
                  },
                  "setName": null,
                  "setVersion": null,
                  "electionId": null,
                  "logicalSessionTimeoutMinutes": 30,
                  "primary": null,
                  "me": null,
                  "$clusterTime": null
                }
              },
              "stale": false,
              "compatible": true,
              "heartbeatFrequencyMS": 10000,
              "localThresholdMS": 15,
              "setName": null,
              "maxElectionId": null,
              "maxSetVersion": null,
              "commonWireVersion": 0,
              "logicalSessionTimeoutMinutes": 30
            },
            "serverSelectionTimeoutMS": 30000,
            "heartbeatFrequencyMS": 10000,
            "minHeartbeatFrequencyMS": 500,
            "servers": {},
            "connectionTimers": {}
          },
          "component": "topology"
        }
      }
    },
    "redis": {
      "options": {
        "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
        "port": 17909,
        "username": "default",
        "password": "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn",
        "family": 4,
        "connectTimeout": 10000,
        "disconnectTimeout": 2000,
        "keepAlive": 0,
        "noDelay": true,
        "connectionName": null,
        "sentinels": null,
        "name": null,
        "role": "master",
        "natMap": null,
        "enableTLSForSentinelMode": false,
        "updateSentinels": true,
        "failoverDetector": false,
        "db": 0,
        "enableOfflineQueue": true,
        "enableReadyCheck": true,
        "autoResubscribe": true,
        "autoResendUnfulfilledCommands": true,
        "lazyConnect": false,
        "keyPrefix": "",
        "reconnectOnError": null,
        "readOnly": false,
        "stringNumbers": false,
        "maxRetriesPerRequest": 20,
        "maxLoadingRetryTime": 10000,
        "enableAutoPipelining": false,
        "autoPipeliningIgnoredCommands": [],
        "sentinelMaxConnections": 10
      },
      "scriptsSet": {},
      "addedBuiltinSet": {},
      "status": "connecting",
      "isCluster": false,
      "reconnectTimeout": null,
      "connectionEpoch": 1,
      "retryAttempts": 0,
      "manuallyClosing": false,
      "_autoPipelines": {},
      "_runningAutoPipelines": {},
      "_events": {},
      "_eventsCount": 4,
      "commandQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "offlineQueue": {
        "_head": 0,
        "_tail": 0,
        "_capacityMask": 3,
        "_list": [
          null,
          null,
          null,
          null
        ]
      },
      "connector": {
        "connecting": true,
        "disconnectTimeout": 2000,
        "options": "[Circular]",
        "stream": {
          "connecting": true,
          "_hadError": false,
          "_parent": null,
          "_host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
          "_closeAfterHandlingError": false,
          "_events": {
            "error": [
              null,
              null
            ],
            "connect": [
              null,
              null,
              null
            ]
          },
          "_readableState": {
            "highWaterMark": 16384,
            "buffer": [],
            "bufferIndex": 0,
            "length": 0,
            "pipes": [],
            "awaitDrainWriters": null
          },
          "_writableState": {
            "highWaterMark": 16384,
            "length": 0,
            "corked": 0,
            "writelen": 0,
            "bufferedIndex": 0,
            "pendingcb": 0
          },
          "allowHalfOpen": false,
          "_eventsCount": 5,
          "_sockname": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "server": null,
          "_server": null,
          "timeout": 10000
        }
      },
      "condition": {
        "select": 0,
        "auth": [
          "default",
          "9TvrVPzXhusXfbJPoXwlsP9UJYtM3VXn"
        ],
        "subscriber": false
      },
      "stream": "[Circular]"
    },
    "influx": {
      "_options": {
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com"
      },
      "transport": {
        "chunkCombiner": {},
        "defaultOptions": {
          "timeout": 10000,
          "port": null,
          "protocol": "https:",
          "hostname": "us-east-1-1.aws.cloud2.influxdata.com"
        },
        "contextPath": "",
        "headers": {
          "User-Agent": "influxdb-client-js/1.35.0"
        }
      }
    }
  }
} 

[2024-11-14T03:53:43.841Z] [INFO] ✔ Connection to Redis established. {
  "host": "redis-17909.c98.us-east-1-4.ec2.redns.redis-cloud.com",
  "port": 17909
} 

[2024-11-14T03:54:27.110Z] [INFO] CLI closed. Exiting program. {} 

[2024-11-15T03:04:40.050Z] [INFO] Success: The .env file was created with placeholder values. {} 

[2024-11-15T03:04:40.052Z] [INFO] Configuration file created: Polybase-Config.json {} 

[2024-11-15T03:04:40.052Z] [ERROR] Failed to load configuration file: Unexpected token 'u', ..."  "port": undefined
"... is not valid JSON {} 

[2024-11-15T03:04:40.052Z] [ERROR] Configuration file loading failed. Ensure Polybase-Config.json exists and is correctly formatted. {
  "stack": "\"Error: Configuration file loading failed. Ensure Polybase-Config.json exists and is correctly formatted.\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:132:16)\\n    at Object.<anonymous> (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:158:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)\\n    at node:internal/main/run_main_module:28:49\""
} 

[2024-11-15T03:06:13.956Z] [INFO] Success: The .env file was created with placeholder values. {} 

[2024-11-15T03:06:13.958Z] [INFO] Configuration file created: Polybase-Config.json {} 

[2024-11-15T03:06:13.958Z] [ERROR] Failed to load configuration file: Unexpected token '}', ..."port": 
  },
  "redi"... is not valid JSON {} 

[2024-11-15T03:06:13.959Z] [ERROR] Configuration file loading failed. Ensure Polybase-Config.json exists and is correctly formatted. {
  "stack": "\"Error: Configuration file loading failed. Ensure Polybase-Config.json exists and is correctly formatted.\\n    at handleError (/Users/zar/Codesmith/Polybase/Polybase-Package/source/service-utils/error-handling.js:22:17)\\n    at initializePolybase (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:132:16)\\n    at Object.<anonymous> (/Users/zar/Codesmith/Polybase/Polybase-Package/source/userRun.js:158:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)\\n    at node:internal/main/run_main_module:28:49\""
} 

